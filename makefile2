CC := gcc
SRC_DIR ?= src
TEST_DIR ?= test
OBJ_DIR ?= obj
DEBUG ?= 1

ifeq '$(DEBUG)' '1'
CFLAGS ?= -Wall -MMD -g
else
CFLAGS ?= -Wall -MMD -O3 -DNDEBUG
endif

LDFLAGS=

SRC := $(wildcard $(SRC_DIR)/*.c)
OBJS := $(addprefix $(OBJ_DIR)/,$(SRC:.c=.o))
DEPS := $(OBJS:.o=.d)

SRC_TEST := $(wildcard $(TEST_DIR)/*.c)
OBJS_TEST := $(addprefix $(OBJ_DIR)/,$(SRC_TEST:.c=.o))
DEPS_TEST := $(OBJS_TEST:.o=.d)

TARGET ?= exec

.PHONY : test

all: $(TARGET) 

test: LDFLAGS += -lcunit
test: $(OBJS) $(OBJS_TEST)
	$(CC) -o runTest $(filter-out $(OBJ_DIR)/$(SRC_DIR)/main.o,$(OBJS)) $(OBJS_TEST) $(LDFLAGS)


$(TARGET): $(OBJS)	
	$(CC) -o $(TARGET) $(OBJS) $(LDFLAGS)

$(OBJ_DIR)/$(SRC_DIR)/%.o: $(SRC_DIR)/%.c
	@mkdir -p $(OBJ_DIR)/$(SRC_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJ_DIR)/$(TEST_DIR)/%.o: $(TEST_DIR)/%.c
	@mkdir -p $(OBJ_DIR)/$(TEST_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(OBJ_DIR)

mrproper: clean
	rm -f $(TARGET)


-include $(DEPS)